version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: real-estate-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: real-estate
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./api/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - real-estate-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: real-estate-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - real-estate-network

  # API Backend
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: real-estate-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 8800
      DATABASE_URL: mongodb://admin:password123@mongodb:27017/real-estate?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET_KEY: your-super-secret-jwt-key-here-minimum-32-characters
      JWT_REFRESH_SECRET: your-refresh-token-secret-key
      CLIENT_URL: http://localhost:5173
    ports:
      - "8800:8800"
    volumes:
      - ./api/uploads:/app/uploads
      - ./api/logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - real-estate-network

  # Client Frontend
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: real-estate-client
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - api
    networks:
      - real-estate-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: real-estate-nginx
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - client
    networks:
      - real-estate-network

volumes:
  mongodb_data:
  redis_data:

networks:
  real-estate-network:
    driver: bridge
